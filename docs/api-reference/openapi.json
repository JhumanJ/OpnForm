{
  "openapi": "3.0.1",
  "info": {
    "title": "OpnForm API",
    "description": "API for interacting with OpnForm, primarily used for Zapier integration",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.opnform.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/external/zapier/validate": {
      "get": {
        "summary": "Validate API Key",
        "description": "This endpoint is used by Zapier to test the validity of the API key.",
        "responses": {
          "200": {
            "description": "API key is valid"
          },
          "401": {
            "description": "Invalid API key"
          }
        }
      }
    },
    "/external/zapier/forms": {
      "get": {
        "summary": "List Forms",
        "description": "Retrieve a list of forms available in a specific workspace.",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "description": "The ID of the workspace for which to list forms",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external/zapier/webhook": {
      "post": {
        "summary": "New Submission Trigger",
        "description": "This endpoint is used to set up a webhook for new form submissions.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hookUrl": {
                    "type": "string",
                    "description": "The URL provided by Zapier to send the submission data"
                  },
                  "form_id": {
                    "type": "string",
                    "description": "The ID of the form for which to trigger the webhook"
                  }
                },
                "required": ["hookUrl", "form_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook successfully set up"
          }
        }
      },
      "delete": {
        "summary": "Unsubscribe Webhook",
        "description": "This endpoint is used to unsubscribe from the webhook.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hookUrl": {
                    "type": "string",
                    "description": "The URL provided by Zapier to stop sending the submission data"
                  },
                  "form_id": {
                    "type": "string",
                    "description": "The ID of the form for which to unsubscribe the webhook"
                  }
                },
                "required": ["hookUrl", "form_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook successfully unsubscribed"
          }
        }
      }
    },
    "/external/zapier/submissions/recent": {
      "get": {
        "summary": "Sample Submission Polling",
        "description": "Retrieves the most recent submissions for a specified form.",
        "parameters": [
          {
            "name": "form_id",
            "in": "query",
            "description": "The ID of the form to retrieve submissions for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/open/forms": {
      "get": {
        "summary": "List Forms (Public API)",
        "description": "Retrieve all forms accessible to the token holder.",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Form"}
                }
              }
            }
          },
          "403": {"description": "Forbidden – token lacks forms:read ability"}
        }
      },
      "post": {
        "summary": "Create Form (Public API)",
        "description": "Create a new form; requires forms:write ability.",
        "security": [{"bearerAuth": []}],
        "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object"}}}},
        "responses": {"201": {"description": "Form created"}, "403": {"description": "Forbidden – token lacks forms:write ability"}}
      }
    },
    "/open/forms/{id}": {
      "get": {
        "summary": "Get Form", "description": "Retrieve a single form.",
        "security": [{"bearerAuth": []}],
        "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}],
        "responses": {"200": {"description": "Successful", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Form"}}}}, "404": {"description": "Not Found"}, "403": {"description": "Forbidden"}}
      },
      "put": {"summary": "Update Form", "description": "Update an existing form.", "security": [{"bearerAuth": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object"}}}}, "responses": {"200": {"description": "Updated"}, "403": {"description": "Forbidden – token lacks forms:write ability"}}},
      "delete": {"summary": "Delete Form", "description": "Delete a form.", "security": [{"bearerAuth": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "Deleted"}, "403": {"description": "Forbidden"}}}
    },
    "/open/forms/{id}/submissions": {
      "get": {
        "summary": "List Submissions (Public API)",
        "description": "Retrieve submissions for a specific form. Requires `submissions:read` ability.",
        "security": [{"bearerAuth": []}],
        "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}],
        "responses": {"200": {"description": "Successful"}, "403": {"description": "Forbidden – token lacks submissions:read ability"}}
      },
      "post": {
        "summary": "Export Submissions (CSV)",
        "description": "Export submissions as CSV. Requires `submissions:read`.",
        "security": [{"bearerAuth": []}],
        "requestBody": {"required": false},
        "responses": {"200": {"description": "Export file"}, "403": {"description": "Forbidden"}}
      }
    },
    "/open/forms/{id}/submissions/{submission_id}": {
      "put": {"summary": "Update Submission", "description": "Update a submission. Requires `submissions:write` ability.", "security": [{"bearerAuth": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "submission_id", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object"}}}}, "responses": {"200": {"description": "Updated"}, "403": {"description": "Forbidden – token lacks submissions:write ability"}}}
    },
    "/open/workspaces": {
      "get": {"summary": "List Workspaces", "description": "Requires `workspaces:read`.", "security": [{"bearerAuth": []}], "responses": {"200": {"description": "Successful"}, "403": {"description": "Forbidden"}}},
      "post": {"summary": "Create Workspace", "description": "Requires `workspaces:write`.", "security": [{"bearerAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object"}}}}, "responses": {"201": {"description": "Created"}, "403": {"description": "Forbidden"}}}
    },
    "/open/workspaces/{workspaceId}": {
      "put": {"summary": "Update Workspace", "description": "Requires `workspaces:write`.", "security": [{"bearerAuth": []}], "parameters": [{"name": "workspaceId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object"}}}}, "responses": {"200": {"description": "Updated"}, "403": {"description": "Forbidden"}}},
      "delete": {"summary": "Delete Workspace", "description": "Requires `workspaces:write`.", "security": [{"bearerAuth": []}], "parameters": [{"name": "workspaceId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"204": {"description": "Deleted"}, "403": {"description": "Forbidden"}}}
    },
    "/open/workspaces/{workspaceId}/users": {
      "get": {"summary": "List Workspace Users", "description": "Requires `workspace-users:read`.", "security": [{"bearerAuth": []}], "parameters": [{"name": "workspaceId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Successful"}, "403": {"description": "Forbidden"}}}
    },
    "/open/workspaces/{workspaceId}/users/add": {
      "post": {"summary": "Add Workspace User", "description": "Requires `workspace-users:write`.", "security": [{"bearerAuth": []}], "parameters": [{"name": "workspaceId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object"}}}}, "responses": {"200": {"description": "User added"}, "403": {"description": "Forbidden"}}}
    }
  },
  "components": {
    "schemas": {
      "Form": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Submission": {
        "type": "object",
        "properties": {
          "submission_id": {
            "type": "string"
          },
          "form_id": {
            "type": "string"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}