# syntax=docker/dockerfile:1.3-labs

FROM alpine:latest AS code

WORKDIR /app

ARG OPNFORM_VERSION=main
ENV OPNFORM_VERSION=${OPNFORM_VERSION}

RUN apk add --no-cache git \
        && mkdir -p /app \
        && echo "Cloning OpnForm tag/branch: ${OPNFORM_VERSION}" \
        && git config --global advice.detachedHead false \
        && git clone --depth 1 --branch ${OPNFORM_VERSION} https://github.com/JhumanJ/OpnForm.git /app

FROM node:20-alpine AS javascript-builder
WORKDIR /app

# It's best to add as few files as possible before running the build commands
# as they will be re-run everytime one of those files changes.
#
# It's possible to run npm install with only the package.json and package-lock.json file.

COPY --from=code /app/client/package.json /app/client/package-lock.json ./

# Install git and other necessary build tools
RUN apk add --no-cache git

# Clear npm cache, remove existing node_modules, and install dependencies
RUN npm cache clean --force && \
    rm -rf node_modules && \
    npm ci

# Explicitly install the correct version of esbuild
# RUN npm install esbuild@0.21.5

COPY --from=code /app/client/ /app/
RUN npm run build

FROM node:20-alpine
WORKDIR /app
COPY --from=javascript-builder /app/.output/ /app/
RUN ls /app/

EXPOSE 3000

CMD [ "node", "./server/index.mjs" ]
